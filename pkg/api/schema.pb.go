// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: schema.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockMetadataType int32

const (
	BlockMetadataType_UNKNOWN BlockMetadataType = 0
	// The FIXED_LENGTH value indicates that data ranges are
	// returned in fixed size blocks.
	BlockMetadataType_FIXED_LENGTH BlockMetadataType = 1
	// The VARIABLE_LENGTH value indicates that data ranges
	// are returned in potentially variable sized extents.
	BlockMetadataType_VARIABLE_LENGTH BlockMetadataType = 2
)

// Enum value maps for BlockMetadataType.
var (
	BlockMetadataType_name = map[int32]string{
		0: "UNKNOWN",
		1: "FIXED_LENGTH",
		2: "VARIABLE_LENGTH",
	}
	BlockMetadataType_value = map[string]int32{
		"UNKNOWN":         0,
		"FIXED_LENGTH":    1,
		"VARIABLE_LENGTH": 2,
	}
)

func (x BlockMetadataType) Enum() *BlockMetadataType {
	p := new(BlockMetadataType)
	*p = x
	return p
}

func (x BlockMetadataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockMetadataType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[0].Descriptor()
}

func (BlockMetadataType) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[0]
}

func (x BlockMetadataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockMetadataType.Descriptor instead.
func (BlockMetadataType) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

// BlockMetadata specifies a data range.
type BlockMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This is the zero based byte position in the volume or snapshot,
	// measured from the start of the object.
	// This field is REQUIRED.
	ByteOffset int64 `protobuf:"varint,1,opt,name=byte_offset,json=byteOffset,proto3" json:"byte_offset,omitempty"`
	// This is the size of the data range.
	// size_bytes will be greater than zero.
	// This field is REQUIRED.
	SizeBytes     int64 `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockMetadata) Reset() {
	*x = BlockMetadata{}
	mi := &file_schema_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMetadata) ProtoMessage() {}

func (x *BlockMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMetadata.ProtoReflect.Descriptor instead.
func (*BlockMetadata) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

func (x *BlockMetadata) GetByteOffset() int64 {
	if x != nil {
		return x.ByteOffset
	}
	return 0
}

func (x *BlockMetadata) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

// The GetMetadataAllocatedRequest message is used to solicit metadata
// on the allocated blocks of a snapshot: i.e. this identifies the
// data ranges that have valid data as they were the target of some
// previous write operation on the volume.
type GetMetadataAllocatedRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This field specifies an audience scoped authentication token presented by client.
	// This token is used to authenticate and authorize the request at server side.
	// This field is REQUIRED.
	SecurityToken string `protobuf:"bytes,1,opt,name=security_token,json=securityToken,proto3" json:"security_token,omitempty"`
	// This field indicates the Namespace where the VolumeSnapshot exists.
	// This field is REQUIRED.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// This is the VolumeSnapshot object name against which changes
	// are to be computed.
	// This field is REQUIRED.
	SnapshotName string `protobuf:"bytes,3,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`
	// This indicates the zero based starting byte position in the volume
	// snapshot from which the result should be computed.
	// It is intended to be used to continue a previously interrupted
	// call.
	// The client SHOULD specify this value to be the offset of the byte
	// position immediately after the last byte of the last data range
	// received, if continuing an interrupted operation, or zero if not.
	// The sidecar will ensure that the returned response stream does not
	// contain BlockMetadata tuples that end before the requested
	// starting_offset: i.e. if S is the requested starting_offset, and
	// B0 is block_metadata[0] of the first message in the response
	// stream, then (S < B0.byte_offset + B0.size_bytes) will be true.
	// This field is REQUIRED.
	StartingOffset int64 `protobuf:"varint,4,opt,name=starting_offset,json=startingOffset,proto3" json:"starting_offset,omitempty"`
	// This is an optional parameter, and if non-zero it specifies the
	// maximum number of tuples to be returned in each
	// GetMetadataAllocatedResponse message returned by the RPC stream.
	// The sidecar will determine an appropriate value if 0, and is
	// always free to send less than the requested value.
	// This field is OPTIONAL.
	MaxResults    int32 `protobuf:"varint,5,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataAllocatedRequest) Reset() {
	*x = GetMetadataAllocatedRequest{}
	mi := &file_schema_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataAllocatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataAllocatedRequest) ProtoMessage() {}

func (x *GetMetadataAllocatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataAllocatedRequest.ProtoReflect.Descriptor instead.
func (*GetMetadataAllocatedRequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{1}
}

func (x *GetMetadataAllocatedRequest) GetSecurityToken() string {
	if x != nil {
		return x.SecurityToken
	}
	return ""
}

func (x *GetMetadataAllocatedRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetMetadataAllocatedRequest) GetSnapshotName() string {
	if x != nil {
		return x.SnapshotName
	}
	return ""
}

func (x *GetMetadataAllocatedRequest) GetStartingOffset() int64 {
	if x != nil {
		return x.StartingOffset
	}
	return 0
}

func (x *GetMetadataAllocatedRequest) GetMaxResults() int32 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

// GetMetadataAllocatedResponse messages are returned in a gRPC stream.
// Cumulatively, they provide information on the allocated data
// ranges in the snapshot.
type GetMetadataAllocatedResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This specifies the style used in the BlockMetadata sequence.
	// This value must be the same in all such messages returned by
	// the stream.
	// If block_metadata_type is FIXED_LENGTH, then the size_bytes field
	// of each message in the block_metadata list will be constant.
	// This field is REQUIRED.
	BlockMetadataType BlockMetadataType `protobuf:"varint,1,opt,name=block_metadata_type,json=blockMetadataType,proto3,enum=snapshotmetadata.BlockMetadataType" json:"block_metadata_type,omitempty"`
	// This returns the capacity of the underlying volume in bytes.
	// This value must be the same in all such messages returned by
	// the stream.
	// This field is REQUIRED.
	VolumeCapacityBytes int64 `protobuf:"varint,2,opt,name=volume_capacity_bytes,json=volumeCapacityBytes,proto3" json:"volume_capacity_bytes,omitempty"`
	// This is a list of data range tuples.
	// If the value of max_results in the GetMetadataAllocatedRequest
	// message is greater than zero, then the number of entries in this
	// list will be less than or equal to that value.
	// The sidecar will respect the value of starting_offset in the request.
	// The byte_offset fields of adjacent BlockMetadata messages
	// Will be strictly increasing and messages will not overlap:
	// i.e. for any two BlockMetadata messages, A and B, if A is returned
	// before B, then (A.byte_offset + A.size_bytes <= B.byte_offset)
	// will be true.
	// This will also be true if A and B are from block_metadata lists in
	// different GetMetadataAllocatedResponse messages in the gRPC stream.
	// This field is OPTIONAL.
	BlockMetadata []*BlockMetadata `protobuf:"bytes,3,rep,name=block_metadata,json=blockMetadata,proto3" json:"block_metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataAllocatedResponse) Reset() {
	*x = GetMetadataAllocatedResponse{}
	mi := &file_schema_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataAllocatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataAllocatedResponse) ProtoMessage() {}

func (x *GetMetadataAllocatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataAllocatedResponse.ProtoReflect.Descriptor instead.
func (*GetMetadataAllocatedResponse) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{2}
}

func (x *GetMetadataAllocatedResponse) GetBlockMetadataType() BlockMetadataType {
	if x != nil {
		return x.BlockMetadataType
	}
	return BlockMetadataType_UNKNOWN
}

func (x *GetMetadataAllocatedResponse) GetVolumeCapacityBytes() int64 {
	if x != nil {
		return x.VolumeCapacityBytes
	}
	return 0
}

func (x *GetMetadataAllocatedResponse) GetBlockMetadata() []*BlockMetadata {
	if x != nil {
		return x.BlockMetadata
	}
	return nil
}

// The GetMetadataDeltaRequest message is used to solicit metadata on the data
// ranges that have changed between two snapshots of the same PersistentVolume.
type GetMetadataDeltaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This field specifies an audience scoped authentication token presented by client.
	// This token is used to authenticate and authorize the request at server side.
	// This field is REQUIRED.
	SecurityToken string `protobuf:"bytes,1,opt,name=security_token,json=securityToken,proto3" json:"security_token,omitempty"`
	// This field indicates the Namespace where the VolumeSnapshot exists.
	// This field is REQUIRED.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// This is the CSI handle of the base VolumeSnapshot object against which changes
	// are to be computed.
	// The value is passed on blindly to the CSI driver without any verification by
	// the sidecar.
	// A backup application must have obtained this value from the Status.SnapshotHandle
	// field of the VolumeSnapshotContent object associated with the base VolumeSnapshot
	// object at some time prior to making this request.
	// It is the backup application's responsibility to determine if the underlying CSI
	// driver requires the base VolumeSnapshot object to exist at the time that this
	// request is made, and take that into consideration in its snapshot retention policy.
	// This field is REQUIRED.
	BaseSnapshotId string `protobuf:"bytes,3,opt,name=base_snapshot_id,json=baseSnapshotId,proto3" json:"base_snapshot_id,omitempty"`
	// This is the name of a second VolumeSnapshot in the same volume,
	// created after the base snapshot.
	// This field is REQUIRED.
	TargetSnapshotName string `protobuf:"bytes,4,opt,name=target_snapshot_name,json=targetSnapshotName,proto3" json:"target_snapshot_name,omitempty"`
	// This indicates the zero based starting byte position in the volume
	// snapshot from which the result should be computed.
	// It is intended to be used to continue a previously interrupted
	// call.
	// The client SHOULD specify this value to be the offset of the byte
	// position immediately after the last byte of the last data range
	// received, if continuing an interrupted operation, or zero if not.
	// The sidecar will ensure that the returned response stream does not
	// contain BlockMetadata tuples that end before the requested
	// starting_offset: i.e. if S is the requested starting_offset, and
	// B0 is block_metadata[0] of the first message in the response
	// stream, then (S < B0.byte_offset + B0.size_bytes) will be true.
	// This field is REQUIRED.
	StartingOffset int64 `protobuf:"varint,5,opt,name=starting_offset,json=startingOffset,proto3" json:"starting_offset,omitempty"`
	// This is an optional parameter, and if non-zero it specifies the
	// maximum number of tuples to be returned in each
	// GetMetadataDeltaResponse message returned by the RPC stream.
	// The sidecar will determine an appropriate value if 0, and is
	// always free to send less than the requested value.
	// This field is OPTIONAL.
	MaxResults    int32 `protobuf:"varint,6,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataDeltaRequest) Reset() {
	*x = GetMetadataDeltaRequest{}
	mi := &file_schema_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataDeltaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataDeltaRequest) ProtoMessage() {}

func (x *GetMetadataDeltaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataDeltaRequest.ProtoReflect.Descriptor instead.
func (*GetMetadataDeltaRequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{3}
}

func (x *GetMetadataDeltaRequest) GetSecurityToken() string {
	if x != nil {
		return x.SecurityToken
	}
	return ""
}

func (x *GetMetadataDeltaRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetMetadataDeltaRequest) GetBaseSnapshotId() string {
	if x != nil {
		return x.BaseSnapshotId
	}
	return ""
}

func (x *GetMetadataDeltaRequest) GetTargetSnapshotName() string {
	if x != nil {
		return x.TargetSnapshotName
	}
	return ""
}

func (x *GetMetadataDeltaRequest) GetStartingOffset() int64 {
	if x != nil {
		return x.StartingOffset
	}
	return 0
}

func (x *GetMetadataDeltaRequest) GetMaxResults() int32 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

// GetMetadataDeltaResponse messages are returned in a gRPC stream.
// Cumulatively, they provide information on the data ranges that
// have changed between the base and target snapshots specified
// in the GetMetadataDeltaRequest message.
type GetMetadataDeltaResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This specifies the style used in the BlockMetadata sequence.
	// This value must be the same in all such messages returned by
	// the stream.
	// If block_metadata_type is FIXED_LENGTH, then the size_bytes field
	// of each message in the block_metadata list will be constant.
	// This field is REQUIRED.
	BlockMetadataType BlockMetadataType `protobuf:"varint,1,opt,name=block_metadata_type,json=blockMetadataType,proto3,enum=snapshotmetadata.BlockMetadataType" json:"block_metadata_type,omitempty"`
	// This returns the capacity of the underlying volume in bytes.
	// This value must be the same in all such messages returned by
	// the stream.
	// This field is REQUIRED.
	VolumeCapacityBytes int64 `protobuf:"varint,2,opt,name=volume_capacity_bytes,json=volumeCapacityBytes,proto3" json:"volume_capacity_bytes,omitempty"`
	// This is a list of data range tuples.
	// If the value of max_results in the GetMetadataDeltaRequest message
	// is greater than zero, then the number of entries in this list will
	// be less than or equal to that value.
	// The sidecar will respect the value of starting_offset in the request.
	// The byte_offset fields of adjacent BlockMetadata messages
	// Will be strictly increasing and messages will not overlap:
	// i.e. for any two BlockMetadata messages, A and B, if A is returned
	// before B, then (A.byte_offset + A.size_bytes <= B.byte_offset)
	// will be true.
	// This will also be true if A and B are from block_metadata lists in
	// different GetMetadataDeltaResponse messages in the gRPC stream.
	// This field is OPTIONAL.
	BlockMetadata []*BlockMetadata `protobuf:"bytes,3,rep,name=block_metadata,json=blockMetadata,proto3" json:"block_metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataDeltaResponse) Reset() {
	*x = GetMetadataDeltaResponse{}
	mi := &file_schema_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataDeltaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataDeltaResponse) ProtoMessage() {}

func (x *GetMetadataDeltaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataDeltaResponse.ProtoReflect.Descriptor instead.
func (*GetMetadataDeltaResponse) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{4}
}

func (x *GetMetadataDeltaResponse) GetBlockMetadataType() BlockMetadataType {
	if x != nil {
		return x.BlockMetadataType
	}
	return BlockMetadataType_UNKNOWN
}

func (x *GetMetadataDeltaResponse) GetVolumeCapacityBytes() int64 {
	if x != nil {
		return x.VolumeCapacityBytes
	}
	return 0
}

func (x *GetMetadataDeltaResponse) GetBlockMetadata() []*BlockMetadata {
	if x != nil {
		return x.BlockMetadata
	}
	return nil
}

var File_schema_proto protoreflect.FileDescriptor

const file_schema_proto_rawDesc = "" +
	"\n" +
	"\fschema.proto\x12\x10snapshotmetadata\"O\n" +
	"\rBlockMetadata\x12\x1f\n" +
	"\vbyte_offset\x18\x01 \x01(\x03R\n" +
	"byteOffset\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x02 \x01(\x03R\tsizeBytes\"\xd1\x01\n" +
	"\x1bGetMetadataAllocatedRequest\x12%\n" +
	"\x0esecurity_token\x18\x01 \x01(\tR\rsecurityToken\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12#\n" +
	"\rsnapshot_name\x18\x03 \x01(\tR\fsnapshotName\x12'\n" +
	"\x0fstarting_offset\x18\x04 \x01(\x03R\x0estartingOffset\x12\x1f\n" +
	"\vmax_results\x18\x05 \x01(\x05R\n" +
	"maxResults\"\xef\x01\n" +
	"\x1cGetMetadataAllocatedResponse\x12S\n" +
	"\x13block_metadata_type\x18\x01 \x01(\x0e2#.snapshotmetadata.BlockMetadataTypeR\x11blockMetadataType\x122\n" +
	"\x15volume_capacity_bytes\x18\x02 \x01(\x03R\x13volumeCapacityBytes\x12F\n" +
	"\x0eblock_metadata\x18\x03 \x03(\v2\x1f.snapshotmetadata.BlockMetadataR\rblockMetadata\"\x84\x02\n" +
	"\x17GetMetadataDeltaRequest\x12%\n" +
	"\x0esecurity_token\x18\x01 \x01(\tR\rsecurityToken\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12(\n" +
	"\x10base_snapshot_id\x18\x03 \x01(\tR\x0ebaseSnapshotId\x120\n" +
	"\x14target_snapshot_name\x18\x04 \x01(\tR\x12targetSnapshotName\x12'\n" +
	"\x0fstarting_offset\x18\x05 \x01(\x03R\x0estartingOffset\x12\x1f\n" +
	"\vmax_results\x18\x06 \x01(\x05R\n" +
	"maxResults\"\xeb\x01\n" +
	"\x18GetMetadataDeltaResponse\x12S\n" +
	"\x13block_metadata_type\x18\x01 \x01(\x0e2#.snapshotmetadata.BlockMetadataTypeR\x11blockMetadataType\x122\n" +
	"\x15volume_capacity_bytes\x18\x02 \x01(\x03R\x13volumeCapacityBytes\x12F\n" +
	"\x0eblock_metadata\x18\x03 \x03(\v2\x1f.snapshotmetadata.BlockMetadataR\rblockMetadata*G\n" +
	"\x11BlockMetadataType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x10\n" +
	"\fFIXED_LENGTH\x10\x01\x12\x13\n" +
	"\x0fVARIABLE_LENGTH\x10\x022\xfc\x01\n" +
	"\x10SnapshotMetadata\x12y\n" +
	"\x14GetMetadataAllocated\x12-.snapshotmetadata.GetMetadataAllocatedRequest\x1a..snapshotmetadata.GetMetadataAllocatedResponse\"\x000\x01\x12m\n" +
	"\x10GetMetadataDelta\x12).snapshotmetadata.GetMetadataDeltaRequest\x1a*.snapshotmetadata.GetMetadataDeltaResponse\"\x000\x01B>Z<github.com/kubernetes-csi/external-snapshot-metadata/pkg/apib\x06proto3"

var (
	file_schema_proto_rawDescOnce sync.Once
	file_schema_proto_rawDescData []byte
)

func file_schema_proto_rawDescGZIP() []byte {
	file_schema_proto_rawDescOnce.Do(func() {
		file_schema_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schema_proto_rawDesc), len(file_schema_proto_rawDesc)))
	})
	return file_schema_proto_rawDescData
}

var file_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_schema_proto_goTypes = []any{
	(BlockMetadataType)(0),               // 0: snapshotmetadata.BlockMetadataType
	(*BlockMetadata)(nil),                // 1: snapshotmetadata.BlockMetadata
	(*GetMetadataAllocatedRequest)(nil),  // 2: snapshotmetadata.GetMetadataAllocatedRequest
	(*GetMetadataAllocatedResponse)(nil), // 3: snapshotmetadata.GetMetadataAllocatedResponse
	(*GetMetadataDeltaRequest)(nil),      // 4: snapshotmetadata.GetMetadataDeltaRequest
	(*GetMetadataDeltaResponse)(nil),     // 5: snapshotmetadata.GetMetadataDeltaResponse
}
var file_schema_proto_depIdxs = []int32{
	0, // 0: snapshotmetadata.GetMetadataAllocatedResponse.block_metadata_type:type_name -> snapshotmetadata.BlockMetadataType
	1, // 1: snapshotmetadata.GetMetadataAllocatedResponse.block_metadata:type_name -> snapshotmetadata.BlockMetadata
	0, // 2: snapshotmetadata.GetMetadataDeltaResponse.block_metadata_type:type_name -> snapshotmetadata.BlockMetadataType
	1, // 3: snapshotmetadata.GetMetadataDeltaResponse.block_metadata:type_name -> snapshotmetadata.BlockMetadata
	2, // 4: snapshotmetadata.SnapshotMetadata.GetMetadataAllocated:input_type -> snapshotmetadata.GetMetadataAllocatedRequest
	4, // 5: snapshotmetadata.SnapshotMetadata.GetMetadataDelta:input_type -> snapshotmetadata.GetMetadataDeltaRequest
	3, // 6: snapshotmetadata.SnapshotMetadata.GetMetadataAllocated:output_type -> snapshotmetadata.GetMetadataAllocatedResponse
	5, // 7: snapshotmetadata.SnapshotMetadata.GetMetadataDelta:output_type -> snapshotmetadata.GetMetadataDeltaResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_schema_proto_init() }
func file_schema_proto_init() {
	if File_schema_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schema_proto_rawDesc), len(file_schema_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schema_proto_goTypes,
		DependencyIndexes: file_schema_proto_depIdxs,
		EnumInfos:         file_schema_proto_enumTypes,
		MessageInfos:      file_schema_proto_msgTypes,
	}.Build()
	File_schema_proto = out.File
	file_schema_proto_goTypes = nil
	file_schema_proto_depIdxs = nil
}
